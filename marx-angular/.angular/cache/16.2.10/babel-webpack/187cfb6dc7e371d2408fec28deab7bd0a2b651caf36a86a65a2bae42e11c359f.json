{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/coherency-report.service\";\nexport class AddCoherencyReportComponent {\n  constructor(coherencyReportService) {\n    this.coherencyReportService = coherencyReportService;\n    this.coherencyReport = {\n      serZone: '',\n      type: '',\n      tag: '',\n      description: '',\n      comment: ''\n    };\n    this.submitted = false;\n  }\n  ngOnInit() {}\n  saveCoherencyReport() {\n    const data = {\n      serZone: this.coherencyReport.serZone,\n      type: this.coherencyReport.type,\n      tag: this.coherencyReport.tag,\n      description: this.coherencyReport.description,\n      comment: this.coherencyReport.comment\n    };\n    this.coherencyReportService.create(data).subscribe({\n      next: res => {\n        console.log(res);\n        this.submitted = true;\n      },\n      error: e => console.error(e)\n    });\n  }\n  newCoherencyReport() {\n    this.submitted = false;\n    this.coherencyReport = {\n      serZone: '',\n      type: '',\n      tag: '',\n      description: '',\n      comment: ''\n    };\n  }\n  static #_ = this.ɵfac = function AddCoherencyReportComponent_Factory(t) {\n    return new (t || AddCoherencyReportComponent)(i0.ɵɵdirectiveInject(i1.CoherencyReportService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddCoherencyReportComponent,\n    selectors: [[\"app-add-coherency-report\"]],\n    decls: 2,\n    vars: 0,\n    template: function AddCoherencyReportComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"add-coherency-report works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["AddCoherencyReportComponent","constructor","coherencyReportService","coherencyReport","serZone","type","tag","description","comment","submitted","ngOnInit","saveCoherencyReport","data","create","subscribe","next","res","console","log","error","e","newCoherencyReport","_","i0","ɵɵdirectiveInject","i1","CoherencyReportService","_2","selectors","decls","vars","template","AddCoherencyReportComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\bvp0101\\OneDrive - INFRABEL\\Documents\\Marx\\marx-angular\\src\\app\\components\\add-coherency-report\\add-coherency-report.component.ts","C:\\Users\\bvp0101\\OneDrive - INFRABEL\\Documents\\Marx\\marx-angular\\src\\app\\components\\add-coherency-report\\add-coherency-report.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CoherencyReport } from 'src/app/models/coherency-report.model';\nimport { CoherencyReportService } from 'src/app/services/coherency-report.service';\n\n@Component({\n  selector: 'app-add-coherency-report',\n  templateUrl: './add-coherency-report.component.html',\n  styleUrls: ['./add-coherency-report.component.css']\n})\nexport class AddCoherencyReportComponent {\n\n  coherencyReport: CoherencyReport = {\n    serZone: '',\n    type: '',\n    tag: '',\n    description: '',\n    comment: ''\n  };\n  submitted = false;\n\n  constructor(private coherencyReportService: CoherencyReportService) { }\n\n  ngOnInit(): void {\n  }\n\n  saveCoherencyReport(): void {\n    const data = {\n      serZone: this.coherencyReport.serZone,\n      type: this.coherencyReport.type,\n      tag: this.coherencyReport.tag,\n      description: this.coherencyReport.description,\n      comment: this.coherencyReport.comment\n    };\n\n    this.coherencyReportService.create(data)\n      .subscribe({\n        next: (res) => {\n          console.log(res);\n          this.submitted = true;\n        },\n        error: (e) => console.error(e)\n      });\n  }\n\n  newCoherencyReport(): void {\n    this.submitted = false;\n    this.coherencyReport = {\n      serZone: '',\n      type: '',\n      tag: '',\n      description: '',\n      comment: ''\n    };\n  }\n\n}\n","<p>add-coherency-report works!</p>\n"],"mappings":";;AASA,OAAM,MAAOA,2BAA2B;EAWtCC,YAAoBC,sBAA8C;IAA9C,KAAAA,sBAAsB,GAAtBA,sBAAsB;IAT1C,KAAAC,eAAe,GAAoB;MACjCC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE,EAAE;MACRC,GAAG,EAAE,EAAE;MACPC,WAAW,EAAE,EAAE;MACfC,OAAO,EAAE;KACV;IACD,KAAAC,SAAS,GAAG,KAAK;EAEqD;EAEtEC,QAAQA,CAAA,GACR;EAEAC,mBAAmBA,CAAA;IACjB,MAAMC,IAAI,GAAG;MACXR,OAAO,EAAE,IAAI,CAACD,eAAe,CAACC,OAAO;MACrCC,IAAI,EAAE,IAAI,CAACF,eAAe,CAACE,IAAI;MAC/BC,GAAG,EAAE,IAAI,CAACH,eAAe,CAACG,GAAG;MAC7BC,WAAW,EAAE,IAAI,CAACJ,eAAe,CAACI,WAAW;MAC7CC,OAAO,EAAE,IAAI,CAACL,eAAe,CAACK;KAC/B;IAED,IAAI,CAACN,sBAAsB,CAACW,MAAM,CAACD,IAAI,CAAC,CACrCE,SAAS,CAAC;MACTC,IAAI,EAAGC,GAAG,IAAI;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAI,CAACP,SAAS,GAAG,IAAI;MACvB,CAAC;MACDU,KAAK,EAAGC,CAAC,IAAKH,OAAO,CAACE,KAAK,CAACC,CAAC;KAC9B,CAAC;EACN;EAEAC,kBAAkBA,CAAA;IAChB,IAAI,CAACZ,SAAS,GAAG,KAAK;IACtB,IAAI,CAACN,eAAe,GAAG;MACrBC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE,EAAE;MACRC,GAAG,EAAE,EAAE;MACPC,WAAW,EAAE,EAAE;MACfC,OAAO,EAAE;KACV;EACH;EAAC,QAAAc,CAAA,G;qBA5CUtB,2BAA2B,EAAAuB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,sBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAA3B3B,2BAA2B;IAAA4B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,qCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTxCV,EAAA,CAAAY,cAAA,QAAG;QAAAZ,EAAA,CAAAa,MAAA,kCAA2B;QAAAb,EAAA,CAAAc,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}