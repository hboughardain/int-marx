{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/coherency-report.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../coherency-report-details/coherency-report-details.component\";\nfunction CoherencyReportsListComponent_li_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 11);\n    i0.ɵɵlistener(\"click\", function CoherencyReportsListComponent_li_11_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const coherencyReport_r1 = restoredCtx.$implicit;\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.setActiveCoherencyReport(coherencyReport_r1, i_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const coherencyReport_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", i_r2 == ctx_r0.currentIndex);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", coherencyReport_r1.description, \" \");\n  }\n}\nexport class CoherencyReportsListComponent {\n  constructor(coherencyReportService) {\n    this.coherencyReportService = coherencyReportService;\n    this.currentCoherencyReport = {};\n    this.currentIndex = -1;\n    this.description = '';\n  }\n  ngOnInit() {\n    this.retrieveCoherencyReports();\n  }\n  retrieveCoherencyReports() {\n    this.coherencyReportService.getAll().subscribe({\n      next: data => {\n        this.coherencyReports = data;\n        console.log(data);\n      },\n      error: e => console.error(e)\n    });\n  }\n  refreshList() {\n    this.retrieveCoherencyReports();\n    this.currentCoherencyReport = {};\n    this.currentIndex = -1;\n  }\n  setActiveCoherencyReport(coherencyReport, index) {\n    this.currentCoherencyReport = coherencyReport;\n    this.currentIndex = index;\n  }\n  removeAllCoherencyReports() {\n    this.coherencyReportService.deleteAll().subscribe({\n      next: res => {\n        console.log(res);\n        this.refreshList();\n      },\n      error: e => console.error(e)\n    });\n  }\n  static #_ = this.ɵfac = function CoherencyReportsListComponent_Factory(t) {\n    return new (t || CoherencyReportsListComponent)(i0.ɵɵdirectiveInject(i1.CoherencyReportService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CoherencyReportsListComponent,\n    selectors: [[\"app-coherency-reports-list\"]],\n    decls: 16,\n    vars: 4,\n    consts: [[1, \"list\", \"row\"], [1, \"col-md-8\"], [1, \"input-group\", \"mb-3\"], [\"type\", \"text\", \"placeholder\", \"Search by description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"input-group-append\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [1, \"col-md-6\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"m-3\", \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [3, \"viewMode\", \"currentCoherencyReport\"], [1, \"list-group-item\", 3, \"click\"]],\n    template: function CoherencyReportsListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function CoherencyReportsListComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.description = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function CoherencyReportsListComponent_Template_button_click_5_listener() {\n          return ctx.fuzzySearchDescription();\n        });\n        i0.ɵɵtext(6, \" Search \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"h4\");\n        i0.ɵɵtext(9, \"Coherency Reports List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"ul\", 7);\n        i0.ɵɵtemplate(11, CoherencyReportsListComponent_li_11_Template, 2, 3, \"li\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function CoherencyReportsListComponent_Template_button_click_12_listener() {\n          return ctx.removeAllCoherencyReports();\n        });\n        i0.ɵɵtext(13, \" Remove All \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 6);\n        i0.ɵɵelement(15, \"app-coherency-report-details\", 10);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.description);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.coherencyReports);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"viewMode\", true)(\"currentCoherencyReport\", ctx.currentCoherencyReport);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.CoherencyReportDetailsComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","CoherencyReportsListComponent_li_11_Template_li_click_0_listener","restoredCtx","ɵɵrestoreView","_r4","coherencyReport_r1","$implicit","i_r2","index","ctx_r3","ɵɵnextContext","ɵɵresetView","setActiveCoherencyReport","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","ctx_r0","currentIndex","ɵɵadvance","ɵɵtextInterpolate1","description","CoherencyReportsListComponent","constructor","coherencyReportService","currentCoherencyReport","ngOnInit","retrieveCoherencyReports","getAll","subscribe","next","data","coherencyReports","console","log","error","e","refreshList","coherencyReport","removeAllCoherencyReports","deleteAll","res","_","ɵɵdirectiveInject","i1","CoherencyReportService","_2","selectors","decls","vars","consts","template","CoherencyReportsListComponent_Template","rf","ctx","CoherencyReportsListComponent_Template_input_ngModelChange_3_listener","$event","CoherencyReportsListComponent_Template_button_click_5_listener","fuzzySearchDescription","ɵɵtemplate","CoherencyReportsListComponent_li_11_Template","CoherencyReportsListComponent_Template_button_click_12_listener","ɵɵelement","ɵɵproperty"],"sources":["C:\\Users\\bvp0101\\OneDrive - INFRABEL\\Documents\\Marx\\marx-angular\\src\\app\\components\\coherency-reports-list\\coherency-reports-list.component.ts","C:\\Users\\bvp0101\\OneDrive - INFRABEL\\Documents\\Marx\\marx-angular\\src\\app\\components\\coherency-reports-list\\coherency-reports-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CoherencyReport } from 'src/app/models/coherency-report.model';\nimport { CoherencyReportService } from 'src/app/services/coherency-report.service';\n\n@Component({\n  selector: 'app-coherency-reports-list',\n  templateUrl: './coherency-reports-list.component.html',\n  styleUrls: ['./coherency-reports-list.component.css']\n})\nexport class CoherencyReportsListComponent implements OnInit {\n  coherencyReports?: CoherencyReport[];\n  currentCoherencyReport: CoherencyReport = {};\n  currentIndex = -1;\n  description = '';\n\n  constructor(private coherencyReportService: CoherencyReportService) { }\n\n  ngOnInit(): void {\n    this.retrieveCoherencyReports();\n  }\n\n  retrieveCoherencyReports(): void {\n    this.coherencyReportService.getAll()\n      .subscribe({\n        next: (data) => {\n          this.coherencyReports = data;\n          console.log(data);\n        },\n        error: (e) => console.error(e)\n      });\n  }\n\n  refreshList(): void {\n    this.retrieveCoherencyReports();\n    this.currentCoherencyReport = {};\n    this.currentIndex = -1;\n  }\n\n  setActiveCoherencyReport(coherencyReport: CoherencyReport, index: number): void {\n    this.currentCoherencyReport = coherencyReport;\n    this.currentIndex = index;\n  }\n\n  removeAllCoherencyReports(): void {\n    this.coherencyReportService.deleteAll()\n      .subscribe({\n        next: (res) => {\n          console.log(res);\n          this.refreshList();\n        },\n        error: (e) => console.error(e)\n      });\n  }\n\n//   searchDescription(): void {\n//     this.currentCoherencyReport = {};\n//     this.currentIndex = -1;\n//\n//     this.coherencyReportService.findByDescription(this.description)\n//       .subscribe({\n//         next: (data) => {\n//           this.coherencyReports = data;\n//           console.log(data);\n//         },\n//         error: (e) => console.error(e)\n//       });\n//   }\n}\n","<div class=\"list row\">\n  <div class=\"col-md-8\">\n    <div class=\"input-group mb-3\">\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"Search by description\"\n        [(ngModel)]=\"description\"\n      />\n      <div class=\"input-group-append\">\n        <button\n          class=\"btn btn-outline-secondary\"\n          type=\"button\"\n          (click)=\"fuzzySearchDescription()\"\n        >\n          Search\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-md-6\">\n    <h4>Coherency Reports List</h4>\n    <ul class=\"list-group\">\n      <li\n        class=\"list-group-item\"\n        *ngFor=\"let coherencyReport of coherencyReports; let i = index\"\n        [class.active]=\"i == currentIndex\"\n        (click)=\"setActiveCoherencyReport(coherencyReport, i)\"\n      >\n        {{ coherencyReport.description }}\n      </li>\n    </ul>\n\n    <button class=\"m-3 btn btn-sm btn-danger\" (click)=\"removeAllCoherencyReports()\">\n      Remove All\n    </button>\n  </div>\n  <div class=\"col-md-6\">\n    <app-coherency-report-details\n      [viewMode]=\"true\"\n      [currentCoherencyReport]=\"currentCoherencyReport\"\n    ></app-coherency-report-details>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}